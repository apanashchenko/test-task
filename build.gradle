buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.franzbecker:gradle-lombok:1.14"
    }
}

plugins {
    id 'java'
    id "io.qameta.allure" version "2.8.1"
}

group 'test-task'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

apply plugin: "io.franzbecker.gradle-lombok"


dependencies {
    implementation("com.squareup.retrofit2:retrofit:2.6.0")
    implementation("com.squareup.retrofit2:converter-jackson:2.6.0")
    implementation("org.assertj:assertj-core:3.12.2")
    implementation("org.aeonbits.owner:owner:1.0.10")
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.0")
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.0')
    testImplementation("com.codeborne:selenide:5.2.3")
    testImplementation("io.qameta.allure:allure-selenide:2.12.1")
    testImplementation("com.github.javafaker:javafaker:0.18")
    testRuntimeOnly("io.qameta.allure:allure-junit5:2.12.1")
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.0')
}

tasks.withType(Test) {

    useJUnitPlatform{
        includeTags 'smoke'
    }

//    TODO need fix parallel execution
//    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1


    testLogging.showStandardStreams = true

    systemProperties = [
            'junit.jupiter.execution.parallel.enabled': true,
            'junit.jupiter.extensions.autodetection.enabled': true,
            'junit.jupiter.execution.parallel.config.strategy': 'fixed',
            'junit.jupiter.execution.parallel.config.fixed.parallelism': 1,
            'selenide.browser': System.getProperty('browser', 'chrome')
    ]

}


allure {
    version = "2.12.0"
    downloadLinkFormat = "https://dl.bintray.com/qameta/maven/io/qameta/allure/allure-commandline/%s/allure-commandline-%<s.zip"
}
